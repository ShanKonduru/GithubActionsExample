name: .NET Core Desktop
"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build-and-test:
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
    runs-on: windows-latest
    env:
      Solution_Name: GithubActionsExample.sln
      Test_Project_Path: ScientificCalculator\ScientificCalculator.csproj
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Execute unit tests
        run: dotnet test
      - name: Restore the application
        run: >-
          msbuild $env:Solution_Name /t:Restore
          /p:Configuration=$env:Configuration
        env:
          Configuration: "${{ matrix.configuration }}"
      - name: Create the app package
        run: >-
          msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration
          /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode
          /p:AppxBundle=$env:Appx_Bundle
          /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx
          /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
        env:
          Appx_Bundle: Always
          Appx_Bundle_Platforms: x86|x64
          Appx_Package_Build_Mode: StoreUpload
          Configuration: "${{ matrix.configuration }}"
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3.0.0
      - name: Install tool tool-manifest
        run: dotnet new tool-manifest
      - name: Install tool dotnet-reportgenerator-globaltool
        run: dotnet tool install dotnet-reportgenerator-globaltool
      - name: Install tool dotnet-coverage
        run: dotnet tool install dotnet-coverage
      - name: Run the unit tests with code coverage
        run: dotnet coverage collect dotnet test --output ${{ github.workspace}}/Tests/Coverage --output-format cobertura
      - name: Generate coverage Report
        run: dotnet reportgenerator -reports:${{ github.workspace}}/Tests/Coverage.cobertura.xml -targetdir:"${{ github.workspace}}/Tests/coveragereport" -reporttypes:Html
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
